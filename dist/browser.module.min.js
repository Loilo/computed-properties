function ObservableArray(e,...t){let r=!0;const n=[],o=()=>{r||e()},c=t=>reactify(e,t),l=(e,...t)=>Array.prototype[e].call(n,...t);return Object.defineProperty(n,"push",{value:function(...e){const t=l("push",...e.map(c));return e.length&&o(),t},enumerable:!1}),Object.defineProperty(n,"pop",{value:function(){const e=n.length,t=l("pop");return e&&o(),t},enumerable:!1}),Object.defineProperty(n,"shift",{value:function(){const e=n.length,t=l("shift");return e&&o(),t},enumerable:!1}),Object.defineProperty(n,"unshift",{value:function(...e){const t=l("unshift",...e.map(c));return e.length&&o(),t},enumerable:!1}),Object.defineProperty(n,"splice",{value:function(e,t,...r){const n=l("splice",e,t,...r.map(c));return(n.length||r.length)&&o(),n},enumerable:!1}),Object.defineProperty(n,"sort",{value:function(e){const t=l("sort",e);return o(),t},enumerable:!1}),Object.defineProperty(n,"reverse",{value:function(){const e=l("reverse");return o(),e},enumerable:!1}),Object.defineProperty(n,"$raw",{value:()=>n.slice(0),enumerable:!1}),Object.defineProperty(n,"$set",{value:function(e,t){n[e]=c(t),o()},enumerable:!1}),Object.defineProperty(n,"$destroy",{value:function(){return r=!0,n.map(unreactify)},enumerable:!1}),n.push(...t),r=!1,n}function isPlainObject(e){return"object"==typeof e&&null!==e&&null==e.prototype}function isObservable(e){return!(!Array.isArray(e)&&("object"!=typeof e||null===e||e.prototype)||!e.$destroy)}function extend(...e){if(0===e.length)throw new TypeError("Cannot convert undefined or null to object");if("assign"in Object)return Object.assign(...e);if(1===e.length)return e[0];for(let t in e[1])e[0][t]=e[1][t];return extend(e[0],...e.slice(2))}function ObservableObject(e,t){const r=Object.create(null);let n=!0;const o=[],c=()=>{n||e()};function l(){return Object.getOwnPropertyNames(r).filter(e=>"$"!==e[0]).reduce((e,t)=>extend(Object.create(null),e,{[t]:raw(r[t])}),Object.create(null))}function u(t,n){if(-1!==o.indexOf(t))throw new Error(`Property ${t} is already defined`);let l=n;Object.defineProperty(r,t,{get:()=>l,set(t){const r=t!==l;l=reactify(e,t),r&&c()},enumerable:!0,configurable:!0}),o.push(t),c()}return Object.defineProperty(r,"$set",{value(e,t){u(e,t)},enumerable:!1}),Object.defineProperty(r,"$raw",{value:()=>l(),enumerable:!1}),Object.defineProperty(r,"$destroy",{value:()=>(n=!0,l()),enumerable:!1}),function(){for(const e of Object.keys(t))u(e,t[e])}(),n=!1,r}function reactify(e,t){if(isObservable(t))return t;if(Array.isArray(t)){const r=t.slice(0);for(let t=0;t<r.length;t++)r[t]=reactify(e,r[t]);return ObservableArray(e,...r)}if(isPlainObject(t)){const r=extend({},t);for(const t in r)r[t]=reactify(e,r[t]);return ObservableObject(e,r)}return t}function raw(e){return isObservable(e)?e.$raw():e}function unreactify(e){return isObservable(e)?e.$destroy():e}function Store(e,{verbose:t=!1}={}){const r=Object.create(null);let n=!1,o=null,c=Object.create(null);const l=Object.create(null),u={},a={},i=Object.create(null),s=Object.keys(e),f=[];function b(e){t&&console.log("  invalidate cache of property",e),u.hasOwnProperty(e)&&(a[e]=u[e],delete u[e]),r[e]&&i[e];for(const t of Object.keys(l[e]))b(t)}function p(u){let a=reactify(()=>b(u),e[u]);Object.defineProperty(i,u,{get:()=>(t&&console.log("Accessed property",u,"=",a),n&&(t&&console.log("  through tracking of computed property",o),c[o][u]=!0),a),set(e){if(e===a)return;const n=a;a=reactify(()=>b(u),e),t&&console.log("Set value of property",u,"=",a),t&&console.log("  dependencies to notify:",Object.keys(l[u]));for(const e of Object.keys(l[u]))b(e);r[u]&&r[u].forEach(e=>e(a,n))}})}function y(s){let f=[];Object.defineProperty(i,s,{get(){if(t&&console.log("Accessed computed property",s),n&&(t&&console.log("  through tracking of computed property",o),c[o][s]=!0),u.hasOwnProperty(s))return t&&console.log("  got it from cache"),u[s];const b=a.hasOwnProperty(s);t&&console.log(b?"  it had already been changed":"  it has never been changed before");const p=function(t){const r=n,l=o;n=!0,o=t,c[t]=Object.create(null);const u=e[t].call(i,i),a=Object.keys(c[t]||Object.create(null));return delete c[t],r?o=l:n=!1,{dependencies:a,value:u}}(s),y=p.dependencies,d=f;for(const e of d)delete l[e][s];for(const e of y)l[e][s]=!0;return f=p.dependencies,t&&console.log("  re-evaluated the computed property"),t&&console.log("    dependencies:",f),t&&console.log("    new value:",p.value),u[s]=p.value,b&&a[s]!==p.value&&r[s]&&r[s].forEach(e=>e(p.value,a[s])),b&&delete a[s],p.value}})}return function(){for(const t of s)l[t]=Object.create(null),"function"==typeof e[t]?(y(t),f.push(t)):p(t);return Object.defineProperty(i,"$raw",{value:(e=!0)=>(e=e,Object.getOwnPropertyNames(i).filter(t=>"$"!==t[0]&&(e||-1===f.indexOf(t))).reduce((e,t)=>extend(Object.create(null),e,{[t]:raw(i[t])}),Object.create(null))),enumerable:!1}),Object.defineProperty(i,"$watch",{value:(e,t)=>(e in r||(r[e]=[],i[e]),r[e].push(t),()=>{r[e].splice(r[e].indexOf(t),1),r[e].length||delete r[e]}),enumerable:!1}),Symbol&&(i[Symbol.iterator]=function*(){for(let e=0;e<s.length;e++)yield s[e]}),i;var t}()}export default Store;
